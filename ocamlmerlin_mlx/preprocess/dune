(library
 (name mlx_preprocess)
 (package ocamlmerlin-mlx)
 (flags
  :standard
  -w=-9-67-69
  -open=Ocaml_utils
  -open=Ocaml_parsing
  -open=Merlin_utils)
 (libraries
  compiler-libs.common
  merlin-lib.ocaml_preprocess
  merlin-lib.ocaml_parsing))

(copy_files#
 (enabled_if
  (<> %{profile} "release"))
 (mode promote)
 (files ../../merlin/src/ocaml/preprocess/parser_explain.ml))

(copy_files#
 (enabled_if
  (<> %{profile} "release"))
 (mode promote)
 (files ../../merlin/src/ocaml/preprocess/lexer_ident.{mll,mli}))

(copy_files#
 (enabled_if
  (<> %{profile} "release"))
 (mode promote)
 (files ../../merlin/src/ocaml/preprocess/menhirLib.{ml,mli}))

(copy_files#
 (files ../../lib/jsx_helper.ml))

(ocamllex lexer_ident lexer_raw)

(menhir
 (modules parser_raw)
 (enabled_if
  (<> %{profile} "release"))
 (mode promote)
 (flags :standard --inspection --table --cmly))

(rule
 (targets parser_recover.ml)
 (deps parser_raw.cmly)
 (enabled_if
  (<> %{profile} "release"))
 (mode promote)
 (action
  (with-stdout-to
   %{targets}
   (run
    %{exe:../../merlin/src/ocaml/preprocess/recover/gen_recover.exe}
    %{deps}))))

(rule
 (targets parser_printer.ml)
 (deps parser_raw.cmly)
 (enabled_if
  (<> %{profile} "release"))
 (mode promote)
 (action
  (with-stdout-to
   %{targets}
   (run
    %{exe:../../merlin/src/ocaml/preprocess/printer/gen_printer.exe}
    %{deps}))))
